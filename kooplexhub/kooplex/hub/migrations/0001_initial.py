# -*- coding: utf-8 -*-
# Generated by Django 1.9 on 2017-06-12 11:52
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion
import kooplex.hub.models.modelbase


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Container',
            fields=[
                ('id', models.UUIDField(primary_key=True, serialize=False)),
                ('docker_host', models.CharField(max_length=200, null=True)),
                ('docker_port', models.IntegerField(null=True)),
                ('name', models.CharField(max_length=200, null=True)),
                ('image', models.CharField(max_length=200, null=True)),
                ('network', models.CharField(max_length=200, null=True)),
                ('ip', models.GenericIPAddressField()),
                ('privileged', models.BooleanField()),
                ('command', models.TextField(null=True)),
                ('environment', models.TextField(null=True)),
                ('binds', models.TextField(null=True)),
                ('ports', models.TextField(null=True)),
                ('state', models.CharField(max_length=15, null=True)),
                ('project_owner', models.CharField(max_length=200, null=True)),
                ('project_name', models.CharField(max_length=200, null=True)),
                ('is_stopped', models.BooleanField()),
            ],
            options={
                'db_table': 'kooplex_hub_container',
            },
            bases=(models.Model, kooplex.hub.models.modelbase.ModelBase),
        ),
        migrations.CreateModel(
            name='Dashboard_server',
            fields=[
                ('name', models.CharField(max_length=200, primary_key=True, serialize=False)),
                ('id', models.CharField(max_length=200)),
                ('docker_host', models.CharField(max_length=200, null=True)),
                ('docker_port', models.IntegerField(null=True)),
                ('image', models.CharField(max_length=200, null=True)),
                ('network', models.CharField(max_length=200, null=True)),
                ('ip', models.GenericIPAddressField()),
                ('privileged', models.BooleanField(default=False)),
                ('command', models.TextField(null=True)),
                ('environment', models.TextField(null=True)),
                ('binds', models.TextField(null=True)),
                ('ports', models.IntegerField(null=True)),
                ('state', models.CharField(max_length=15, null=True)),
                ('project_owner', models.CharField(max_length=200, null=True)),
                ('project_name', models.CharField(max_length=200, null=True)),
                ('is_stopped', models.BooleanField(default=False)),
                ('dir_to', models.CharField(max_length=200, null=True)),
                ('url', models.CharField(max_length=200, null=True)),
                ('cache_url', models.CharField(max_length=200, null=True)),
                ('dashboard_name', models.CharField(max_length=200, null=True)),
                ('kernel_gateway_name', models.CharField(max_length=200, null=True)),
                ('type', models.CharField(max_length=200, null=True)),
            ],
            options={
                'db_table': 'kooplex_hub_dasboard_server',
            },
            bases=(models.Model, kooplex.hub.models.modelbase.ModelBase),
        ),
        migrations.CreateModel(
            name='DockerImage',
            fields=[
                ('id', models.CharField(max_length=200, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=200)),
            ],
            options={
                'db_table': 'kooplex_hub_dockerimage',
            },
            bases=(models.Model, kooplex.hub.models.modelbase.ModelBase),
        ),
        migrations.CreateModel(
            name='Fileform',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('docfile', models.FileField(upload_to=' ')),
            ],
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('name', models.TextField(max_length=200, null=True)),
                ('path', models.TextField(max_length=200, null=True)),
                ('path_with_namespace', models.TextField(max_length=200, null=True)),
                ('creator_id', models.IntegerField(null=True)),
                ('description', models.TextField(null=True)),
                ('visibility', models.TextField(null=True)),
                ('owner_name', models.CharField(max_length=200, null=True)),
                ('owner_username', models.CharField(max_length=200, null=True)),
                ('owner_id', models.IntegerField(null=True)),
                ('creator_name', models.CharField(max_length=200, null=True)),
                ('home', models.CharField(max_length=200, null=True)),
                ('gids', models.CharField(max_length=300, null=True)),
                ('image', models.CharField(max_length=200)),
                ('environment', models.TextField(null=True)),
                ('binds', models.TextField(null=True)),
            ],
            options={
                'db_table': 'kooplex_hub_project',
            },
            bases=(models.Model, kooplex.hub.models.modelbase.ModelBase),
        ),
        migrations.CreateModel(
            name='Report',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('project_id', models.IntegerField(null=True)),
                ('name', models.CharField(max_length=200, null=True)),
                ('file_name', models.CharField(max_length=200, null=True)),
                ('dir_name', models.CharField(max_length=200, null=True)),
                ('creator_name', models.CharField(max_length=200, null=True)),
                ('path', models.CharField(max_length=200, null=True)),
                ('url', models.CharField(max_length=200, null=True)),
                ('cache_url', models.CharField(max_length=200, null=True)),
                ('binds', models.TextField(null=True)),
                ('type', models.CharField(max_length=15)),
                ('dashboard_server', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='hub.Dashboard_server')),
            ],
            options={
                'db_table': 'kooplex_hub_report',
            },
            bases=(models.Model, kooplex.hub.models.modelbase.ModelBase),
        ),
        migrations.CreateModel(
            name='Session',
            fields=[
                ('id', models.UUIDField(primary_key=True, serialize=False)),
                ('notebook_path', models.CharField(max_length=200)),
                ('kernel_id', models.UUIDField()),
                ('kernel_name', models.CharField(max_length=15)),
                ('external_url', models.CharField(max_length=200)),
                ('repo_name', models.CharField(max_length=200)),
                ('container_name', models.CharField(max_length=200)),
                ('is_forked', models.BooleanField()),
                ('project_id', models.IntegerField()),
                ('target_id', models.IntegerField()),
            ],
            options={
                'db_table': 'kooplex_hub_session',
            },
            bases=(models.Model, kooplex.hub.models.modelbase.ModelBase),
        ),
        migrations.CreateModel(
            name='Notebook',
            fields=[
                ('container_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='hub.Container')),
                ('username', models.CharField(max_length=200)),
                ('port', models.IntegerField()),
                ('proxy_path', models.CharField(max_length=200)),
                ('external_url', models.CharField(max_length=200)),
            ],
            options={
                'db_table': 'kooplex_hub_notebook',
            },
            bases=('hub.container',),
        ),
        migrations.AddField(
            model_name='session',
            name='notebook',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hub.Notebook'),
        ),
    ]
